{"version":3,"sources":["firebase.js","services/fireApi.js","components/Signup.js","contexts/AuthContext.js","components/DarkMode/colorScheme.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/NavBar.js","components/TaskCard.js","components/InputForm.js","components/sortingList.js","components/TaskList.js","components/DarkMode/togler.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","getData","email","taskRef","collection","getDocs","createNewCollection","usersCollectionRef","addDoc","taskName","discription","updataTask","id","newData","user","taskDocRef","doc","setDoc","DeleteTask","currentUser","deleteDoc","addTask","data","addRef","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","useState","error","setError","loading","setLoading","history","useHistory","e","a","preventDefault","current","value","push","Container","className","style","minHeight","maxWidth","Card","Body","Alert","variant","Form","onSubmit","Group","Label","Control","type","ref","required","Button","disabled","to","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","setCurrentUser","useEffect","onAuthStateChanged","login","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail_1","updateEmail","updatePassword_1","updatePassword","Provider","useColorSchemeState","createPersistedState","useColorScheme","systemPrefersDark","useMediaQuery","query","undefined","isDark","setIsDark","useMemo","document","body","classList","add","remove","Login","console","log","color","bgcolor","backgroundColor","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","NavBar","Navbar","Brand","href","Toggle","Collapse","Text","onClick","TaskCard","updater","updateModal","setUpdateModal","inputData","description","priority","status","setInputData","marginBottom","Row","Col","xs","lg","Title","Link","delete_task","title","open","onOk","onCancel","okText","cancelText","padding","onChange","persist","prev","temp","target","handleTask","wrap","width","options","label","as","rows","handleDesc","InputForm","SortingList","setSorting","sorting","handleSorting","ch","TaskList","task","setTask","count","setCount","bgColor","dd","docs","map","getAllData","margin","boxShadow","marginTop","mx","d","key","filter","f","DarkModeToggle","checked","icons","unchecked","aria-label","App","position","top","right","zIndex","exact","path","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f227702f.chunk.js","sourcesContent":["// import firebase from \"firebase\"\nimport { initializeApp } from \"firebase/app\"\nimport { getAuth } from \"firebase/auth\"\nimport {getFirestore} from \"firebase/firestore\"\nimport \"firebase/auth\"\n\nconst app =initializeApp({\n  apiKey: \"AIzaSyC_LRyR4l2MOk_hyhKCMe3lILBy3yp1fLc\",\n  authDomain: \"task-manager-dev1.firebaseapp.com\",\n  projectId: \"task-manager-dev1\",\n  storageBucket: \"task-manager-dev1.appspot.com\",\n  messagingSenderId: \"87486177086\",\n  appId: \"1:87486177086:web:1dd6d9f34daecd4d87166f\"\n})\n\nexport const auth = getAuth(app)\nexport default app\nexport const db=getFirestore(app)","import { db } from \"../firebase\";\r\nimport { getDocs, addDoc, collection, deleteDoc, doc, setDoc } from \"firebase/firestore\";\r\n\r\n\r\nexport function getData(email) {\r\n  const taskRef = collection(db, email)\r\n  return getDocs(taskRef);\r\n}\r\n\r\nexport function createNewCollection(email) {\r\n\r\n  const usersCollectionRef = collection(db, email)\r\n  return addDoc(usersCollectionRef, {\r\n    taskName: \"demo task\",\r\n    discription: \"remove it \",\r\n  })\r\n\r\n}\r\n\r\nexport function updataTask(id, newData, user) {\r\n  const taskDocRef = doc(db, user, id)\r\n  return setDoc(taskDocRef, newData)\r\n\r\n}\r\n\r\nexport function DeleteTask(id, currentUser) {\r\n  const taskDocRef = doc(db, currentUser.email, id)\r\n\r\n  return deleteDoc(taskDocRef)\r\n\r\n}\r\n\r\nexport function addTask(user, data) {\r\n  let addRef = collection(db, user)\r\n  return addDoc(addRef, data)\r\n}","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\n// import { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { createNewCollection } from \"../services/fireApi\"\n\nexport default function Signup() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  // const { signup } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n    }\n\n    try {\n      setError(\"\")\n      setLoading(true)\n      // let res =await signup(emailRef.current.value, passwordRef.current.value)\n      createNewCollection(emailRef.current.value);\n      history.push(\"/\")\n    } catch {\n      setError(\"Failed to create an account\")\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n      <Container\n        className=\"d-flex align-items-center justify-content-center\"\n        style={{ minHeight: \"100vh\" }}\n      >\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n          <Card>\n            <Card.Body>\n              <h2 className=\"text-center mb-4\">Sign Up</h2>\n              {error && <Alert variant=\"danger\">{error}</Alert>}\n              <Form onSubmit={handleSubmit}>\n                <Form.Group id=\"email\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control type=\"email\" ref={emailRef} required />\n                </Form.Group>\n                <Form.Group id=\"password\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" ref={passwordRef} required />\n                </Form.Group>\n                <Form.Group id=\"password-confirm\">\n                  <Form.Label>Password Confirmation</Form.Label>\n                  <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n                </Form.Group>\n                <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                  Sign Up\n                </Button>\n              </Form>\n            </Card.Body>\n          </Card>\n          <div className=\"w-100 text-center mt-2\">\n            Already have an account? <Link to=\"/login\">Log In</Link>\n          </div>\n        </div>\n      </Container>\n    </>\n  )\n}\n","import React, { useContext, useState, useEffect } from \"react\"\nimport { auth } from \"../firebase\"\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword ,signOut, sendPasswordResetEmail, updateEmail,updatePassword} from \"firebase/auth\"\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState()\n  const [loading, setLoading] = useState(true)\n\n  function signup(email, password) {\n    return createUserWithEmailAndPassword(auth,email, password)\n  }\n\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth,email, password)\n  }\n\n  function logout() {\n    return signOut(auth)\n  }\n\n  function resetPassword(email) {\n    return sendPasswordResetEmail(auth,email)\n  }\n\n  function updateEmail_1(email) {\n    return updateEmail(auth.currentUser,email)\n  }\n\n  function updatePassword_1(password) {\n    return updatePassword(auth.currentUser,password)\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user)\n      setLoading(false)\n    })\n\n    return unsubscribe\n  }, [])\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail_1,\n    updatePassword_1\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  )\n}\n","import { useEffect, useMemo } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport createPersistedState from \"use-persisted-state\";\r\nconst useColorSchemeState = createPersistedState(\"colorScheme\");\r\n\r\nexport function useColorScheme() {\r\n  const systemPrefersDark = useMediaQuery(\r\n    {\r\n      query: \"(prefers-color-scheme: dark)\",\r\n    },\r\n    undefined\r\n  );\r\n\r\n  const [isDark, setIsDark] = useColorSchemeState();\r\n  const value = useMemo(\r\n    () => (isDark === undefined ? !!systemPrefersDark : isDark),\r\n    [isDark, systemPrefersDark]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (value) {\r\n      document.body.classList.add(\"dark\");\r\n    } else {\r\n      document.body.classList.remove(\"dark\");\r\n    }\r\n  }, [value]);\r\n\r\n  return {\r\n    isDark: value,\r\n    setIsDark,\r\n  };\r\n}","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { useColorScheme } from \"./DarkMode/colorScheme\"\n\nexport default function Login() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const { login } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    try {\n      setError(\"\")\n      setLoading(true)\n      await login(emailRef.current.value, passwordRef.current.value)\n      history.push(\"/\")\n    } catch (e) {\n      setError(\"Failed to log in\")\n      console.log(e)\n    }\n\n    setLoading(false)\n  }\n\n  let { isDark } = useColorScheme()\n  let color = \"\"\n  let bgcolor = \"\"\n  if (isDark) {\n    color = \"white\"\n    bgcolor = \"grey\"\n  }\n  else {\n    bgcolor = \"white\"\n    color = \"black\"\n  }\n\n  return (\n    <>\n      <Container\n        className=\"d-flex align-items-center justify-content-center\"\n        style={{ minHeight: \"100vh\", color:color }}\n      >\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n          <Card style={{ backgroundColor: bgcolor, color: color }}>\n            <Card.Body>\n              <h2 className=\"text-center mb-4\">Log In</h2>\n              {error && <Alert variant=\"danger\">{error}</Alert>}\n              <Form onSubmit={handleSubmit}>\n                <Form.Group id=\"email\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control type=\"email\" ref={emailRef} required />\n                </Form.Group>\n                <Form.Group id=\"password\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" ref={passwordRef} required />\n                </Form.Group>\n                <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                  Log In\n                </Button>\n              </Form>\n              <div className=\"w-100 text-center mt-3\">\n                <Link to=\"/forgot-password\">Forgot Password?</Link>\n              </div>\n            </Card.Body>\n          </Card>\n          <div className=\"w-100 text-center mt-2\">\n            Need an account? <Link to=\"/signup\">Sign Up</Link>\n          </div>\n        </div>\n      </Container>\n    </>\n  )\n}\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport { useAuth } from \"../contexts/AuthContext\"\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth()\n\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }}\n    ></Route>\n  )\n}\n","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert , Container} from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link } from \"react-router-dom\"\n\nexport default function ForgotPassword() {\n  const emailRef = useRef()\n  const { resetPassword } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    try {\n      setMessage(\"\")\n      setError(\"\")\n      setLoading(true)\n      await resetPassword(emailRef.current.value)\n      setMessage(\"Check your inbox for further instructions\")\n    } catch {\n      setError(\"Failed to reset password\")\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n      <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Password Reset</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          {message && <Alert variant=\"success\">{message}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Reset Password\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/login\">Login</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n      </div>\n      </Container>\n    </>\n  )\n}\n","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { useColorScheme } from \"./DarkMode/colorScheme\"\n\nexport default function UpdateProfile() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { currentUser, updatePassword_1, updateEmail_1 } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n    }\n\n    const promises = []\n    setLoading(true)\n    setError(\"\")\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail_1(emailRef.current.value))\n    }\n    if (passwordRef.current.value) {\n      promises.push(updatePassword_1(passwordRef.current.value))\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        history.push(\"/\")\n      })\n      .catch(() => {\n        setError(\"Failed to update account\")\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  let { isDark } = useColorScheme()\n    let color = \"\"\n    let bgcolor = \"\"\n    if (isDark) {\n        color = \"white\"\n        bgcolor = \"grey\"\n    }\n    else {\n        bgcolor = \"white\"\n        color = \"black\"\n    }\n\n  return (\n    <>\n      <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\"}}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n      <Card style={{backgroundColor:bgcolor, color:color}}>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                ref={emailRef}\n                required\n                defaultValue={currentUser.email}\n              />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordConfirmRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/\">Cancel</Link>\n      </div>\n      </div>\n      </Container>\n    </>\n  )\n}\n","import { Navbar, Container, Button, Alert } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useColorScheme } from \"./DarkMode/colorScheme\";\r\n\r\n\r\n\r\nexport function NavBar() {\r\n\r\n    const [error, setError] = useState(\"\")\r\n    const { currentUser, logout } = useAuth()\r\n    const history = useHistory()\r\n    let { isDark } = useColorScheme();\r\n    let color = \"blue\"\r\n    \r\n    if (isDark) {\r\n        color = \"grey\"\r\n    }\r\n    else {\r\n        color = \"lightblue\"\r\n    }\r\n\r\n    async function handleLogout() {\r\n        setError(\"\")\r\n\r\n        try {\r\n            await logout()\r\n            history.push(\"/login\")\r\n        } catch {\r\n            setError(\"Failed to log out\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav >\r\n            <Navbar className=\"bg-body-tertiary\" style={{ backgroundColor: color,  }}>\r\n                <Container>\r\n\r\n                    <Navbar.Brand href=\"#home\">Task manager</Navbar.Brand>\r\n                    <Navbar.Toggle />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Navbar.Text>\r\n                            Signed in as: <a href=\"#login\">{currentUser.email}</a>\r\n                        </Navbar.Text>\r\n\r\n                        <Button className=\"mx-2\" variant=\"danger\" onClick={handleLogout}>\r\n                            LogOut\r\n                        </Button>\r\n\r\n                        <Button variant=\"primary\" onClick={() => history.push(\"/update-profile\")} >\r\n                            Update\r\n                        </Button>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n            </nav>\r\n        </>\r\n    )\r\n}","import React from \"react\"\r\nimport Card from 'react-bootstrap/Card';\r\nimport { updataTask, DeleteTask } from \"../services/fireApi\";\r\nimport { useColorScheme } from \"./DarkMode/colorScheme\";\r\nimport { Row, Col, Form} from \"react-bootstrap\";\r\nimport { Modal, Select, Space } from \"antd\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nexport default function TaskCard({ data, currentUser, updater }) {\r\n\r\n    let { isDark } = useColorScheme()\r\n    let color = \"\"\r\n    let bgcolor = \"\"\r\n    if (isDark) {\r\n        color = \"white\"\r\n        bgcolor = \"grey\"\r\n    }\r\n    else {\r\n        bgcolor = \"white\"\r\n        color = \"black\"\r\n    }\r\n    let [updateModal, setUpdateModal] = useState(false);\r\n\r\n\r\n\r\n    async function update_task() {\r\n\r\n        try {\r\n            await updataTask(data.id, inputData, currentUser.email)\r\n            setUpdateModal(false)\r\n            updater()\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    async function delete_task() {\r\n\r\n        try {\r\n            await DeleteTask(data.id, currentUser)\r\n            updater();\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n    let [inputData, setInputData] = useState({\r\n        taskName: data.taskName,\r\n        description: data.description,\r\n        priority: data.priority,\r\n        status: data.status\r\n    })\r\n\r\n    function handleTask(e) {\r\n        e.persist()\r\n        setInputData((prev) => {\r\n            let temp = {...prev}\r\n            temp.taskName = e.target.value;\r\n            return temp\r\n        })\r\n    }\r\n\r\n    function handleDesc(e) {\r\n        e.persist()\r\n        setInputData((prev) => {\r\n            let temp = {...prev}\r\n            temp.description = e.target.value\r\n            return temp\r\n        })\r\n    }\r\n\r\n    function handlePriority(e) {\r\n        setInputData((prev) => {\r\n            let temp = {...prev}\r\n            temp.priority = e\r\n            return temp\r\n        })\r\n    }\r\n\r\n    function handleStatus(e) {\r\n        console.log(e)\r\n        setInputData((prev) => {\r\n            let temp = {...prev}\r\n            temp.status = e\r\n            return temp\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card style={{ marginBottom: \"20px\", backgroundColor: bgcolor, color: color }}>\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col xs=\"10\" lg=\"10\">\r\n                            <Card.Title>{data.taskName}</Card.Title>\r\n                        </Col>\r\n                        <Col xs=\"2\" lg=\"2\">\r\n                            {data.priority === \"high\" && <i className=\"fas fa-dot-circle\" style={{ color: \"#ff0000\" }}></i>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Card.Text>\r\n                        {data.description}\r\n                    </Card.Text>\r\n                    <Card.Link onClick={() => delete_task()} href=\"#\">Delete</Card.Link>\r\n                    <Card.Link onClick={() => setUpdateModal(true)} href=\"#\">Modify</Card.Link>\r\n                </Card.Body>\r\n            </Card>\r\n            {updateModal && (\r\n                <Modal\r\n                    title=\"Update Task\"\r\n                    open=\"true\"\r\n                    onOk={update_task}\r\n                    onCancel={() => setUpdateModal(false)}\r\n                    okText=\"Update Task\"\r\n                    cancelText=\"cencel\"\r\n                    style={{padding:\"10px\"}}\r\n                >\r\n                    <>\r\n                        <Form >\r\n                            <Row>\r\n                                <Col xs=\"12\" lg=\"6\">\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Task</Form.Label>\r\n                                        <Form.Control type=\"text\" value={inputData.taskName} placeholder=\"Enter Task \" onChange={(e) => handleTask(e)} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                                <Col xs=\"12\" lg=\"3\">\r\n                                    <Form.Label>Priority</Form.Label>\r\n                                    <Space wrap >\r\n                                        <Select\r\n                                            defaultValue=\"low\"\r\n                                            placeholder=\"Select priority\"\r\n                                            style={{ width: 120 }}\r\n                                            value={inputData.priority}\r\n                                            onChange={handlePriority}\r\n                                            options={[\r\n                                                { value: 'low', label: 'low' },\r\n                                                { value: 'medium', label: 'medium' },\r\n                                                { value: 'high', label: 'high' },\r\n                                            ]}\r\n                                        />\r\n                                    </Space>\r\n                                </Col>\r\n\r\n                                <Col xs=\"12\" lg=\"3\">\r\n                                    <Form.Label>Status</Form.Label>\r\n                                    <Space wrap >\r\n                                        <Select\r\n                                            defaultValue=\"pending\"\r\n                                            placeholder=\"Select Status\"\r\n                                            value={inputData.status}\r\n                                            style={{ width: 120 }}\r\n                                            onChange={handleStatus}\r\n                                            options={[\r\n                                                { value: 'pending', label: 'pending' },\r\n                                                { value: 'completed', label: 'completed' },\r\n\r\n                                            ]}\r\n                                        />\r\n                                    </Space>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control as=\"textarea\" value={inputData.description} rows={3} onChange={(e) => handleDesc(e)} />\r\n                            </Form.Group>\r\n                        </Form>\r\n\r\n                    </>\r\n                </Modal>\r\n            )}\r\n        </>\r\n    )\r\n}","import React from \"react\"\r\nimport { useState } from \"react\"\r\nimport { Form, Col, Row, Button } from \"react-bootstrap\"\r\nimport { addTask } from \"../services/fireApi\"\r\nimport { Space, Select } from \"antd\"\r\n\r\nexport default function InputForm({ currentUser, updater }) {\r\n\r\n  let [inputData, setInputData] = useState({\r\n    taskName: \"\",\r\n    description: \"\",\r\n    priority: \"low\",\r\n    status: \"pending\"\r\n  })\r\n\r\n  function handleTask(e) {\r\n    e.persist()\r\n    setInputData((prev) => {\r\n      let temp = {...prev}\r\n      temp.taskName =e.target.value;\r\n      return temp\r\n    })\r\n  }\r\n\r\n  function handleDesc(e) {\r\n    e.persist()\r\n    setInputData((prev) => {\r\n      let temp ={...prev}\r\n      temp.description = e.target.value\r\n      return temp\r\n    })\r\n  }\r\n\r\n  function handlePriority(e) {\r\n\r\n    setInputData((prev) => {\r\n      let temp ={ ...prev}\r\n      temp.priority = e\r\n      return temp\r\n    })\r\n  }\r\n\r\n  function handleStatus(e) {\r\n\r\n    setInputData((prev) => {\r\n      let temp ={...prev}\r\n      temp.status = e\r\n      return temp\r\n    })\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(inputData)\r\n    try {\r\n      await addTask(currentUser.email, inputData)\r\n      \r\n      setInputData((prev) => {\r\n        let temp = prev;\r\n        temp.status = \"pending\"\r\n        temp.priority = \"low\"\r\n        temp.taskName=\"\"\r\n        temp.description=\"\"\r\n        return temp\r\n      })\r\n      updater()\r\n    }\r\n    catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col xs=\"12\" lg=\"6\">\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Task</Form.Label>\r\n              <Form.Control type=\"text\" value={inputData.taskName} placeholder=\"Enter Task \" onChange={(e) => handleTask(e)} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col xs=\"12\" lg=\"3\">\r\n            <Form.Label>Priority</Form.Label>\r\n            <Space wrap >\r\n              <Select\r\n                defaultValue=\"low\"\r\n                placeholder=\"Select priority\"\r\n                style={{ width: 120 }}\r\n                value={inputData.priority}\r\n                onChange={handlePriority}\r\n                options={[\r\n                  { value: 'low', label: 'low' },\r\n                  { value: 'medium', label: 'medium' },\r\n                  { value: 'high', label: 'high' },\r\n                ]}\r\n              />\r\n            </Space>\r\n          </Col>\r\n\r\n          <Col xs=\"12\" lg=\"3\">\r\n            <Form.Label>Status</Form.Label>\r\n            <Space wrap >\r\n              <Select\r\n                defaultValue=\"pending\"\r\n                placeholder=\"Select Status\"\r\n                value={inputData.status}\r\n                style={{ width: 120 }}\r\n                onChange={handleStatus}\r\n                options={[\r\n                  { value: 'pending', label: 'pending' },\r\n                  { value: 'completed', label: 'completed' },\r\n\r\n                ]}\r\n              />\r\n            </Space>\r\n          </Col>\r\n\r\n        </Row>\r\n        <Form.Group className=\"mb-3\" >\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control as=\"textarea\" value={inputData.description} rows={3} onChange={(e) => handleDesc(e)} />\r\n        </Form.Group>\r\n        <Button type=\"submit\">Submit form</Button>\r\n      </Form>\r\n\r\n    </>\r\n  )\r\n}","import React from \"react\"\r\nimport { Select, Space } from \"antd\"\r\nimport { Col } from \"react-bootstrap\"\r\n\r\nexport function SortingList({ setSorting, sorting }) {\r\n\r\n  function handleSorting(e, ch) {\r\n    if (ch === \"priority\") {\r\n      setSorting((prev) => {\r\n        let temp = { ...prev }\r\n        temp.priority = e\r\n        return temp\r\n      })\r\n    }\r\n\r\n    if (ch === \"status\") {\r\n      setSorting((prev) => {\r\n        let temp = { ...prev }\r\n        temp.status = e\r\n        return temp\r\n      })\r\n    }\r\n    console.log(e, ch)\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <>\r\n\r\n      <Col lg=\"3\">\r\n        <span>select Priority</span>\r\n        <Space wrap >\r\n          <Select\r\n            defaultValue=\"defult\"\r\n            placeholder=\"Select Priority\"\r\n            value={sorting.priority}\r\n            style={{ width: 120 }}\r\n            onChange={(e) => handleSorting(e, \"priority\")}\r\n            options={[\r\n              { value: 'default', label: 'default' },\r\n              { value: 'low', label: 'low' },\r\n              { value: 'medium', label: 'medium' },\r\n              { value: 'high', label: 'high' },\r\n\r\n            ]}\r\n          />\r\n        </Space>\r\n      </Col>\r\n      <Col lg=\"3\">\r\n        <span>select Status</span>\r\n        <Space wrap >\r\n          <Select\r\n            defaultValue=\"default\"\r\n            placeholder=\"Select Status\"\r\n            value={sorting.status}\r\n            style={{ width: 120 }}\r\n            onChange={(e) => handleSorting(e, \"status\")}\r\n            options={[\r\n              { value: 'default', label: 'default' },\r\n              { value: 'pending', label: 'pending' },\r\n              { value: 'completed', label: 'completed' },\r\n            ]}\r\n          />\r\n        </Space>\r\n      </Col>\r\n\r\n\r\n    </>\r\n  )\r\n}","import React from \"react\"\r\nimport { NavBar } from \"./NavBar\"\r\nimport { getData } from \"../services/fireApi\"\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport TaskCard from \"./TaskCard\"\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\nimport InputForm from \"./InputForm.js\"\r\nimport { useColorScheme } from \"./DarkMode/colorScheme\"\r\nimport { SortingList } from \"./sortingList\"\r\n\r\nexport default function TaskList() {\r\n\r\n    const [task, setTask] = useState([]);\r\n    let [count, setCount] = useState(1);\r\n    const { currentUser } = useAuth()\r\n    const [sorting, setSorting] = useState({\r\n        priority: \"default\",\r\n        status: \"default\"\r\n    })\r\n    let { isDark } = useColorScheme();\r\n    let color = \"\"\r\n    let bgColor=\"\"\r\n    if (isDark) { color = \"white\"; bgColor=\"grey\" }\r\n    else {color = \"black\"; bgColor=\"white\"}\r\n\r\n    useEffect(() => {\r\n        console.log(\"innn\")\r\n        async function getAllData() {\r\n            try {\r\n                let data = await getData(currentUser.email)\r\n                const dd = data.docs.map((doc) => ({\r\n                    ...doc.data(),\r\n                    id: doc.id,\r\n                }))\r\n                console.log(dd)\r\n                setTask(dd)\r\n            }\r\n            catch {\r\n                console.log(\"some error in data\")\r\n            }\r\n        }\r\n        getAllData()\r\n    }, [count])\r\n\r\n    let updater = () => {\r\n        setCount((prev) => prev + 1)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <Container>\r\n                <Row  >\r\n                    <Col xs=\"12\" lg=\"8\"\r\n                        style={{ margin: \"auto\", boxShadow: \"rgba(0, 0, 0, 0.1) 0px 4px 12px\", \r\n                        marginBottom: \"20px\", marginTop: \"10px\", padding: \"20px\", backgroundColor: bgColor   }}\r\n                    >\r\n                        <InputForm currentUser={currentUser} updater={updater} />\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{ color: color }}>\r\n                    <SortingList setSorting={setSorting} sorting={sorting} />\r\n                </Row>\r\n                <Row mx={2}>\r\n                    {sorting.priority === \"default\" && (\r\n                        task.map((d) => {\r\n                            return (\r\n                                <Col key={d.id} xs=\"12\" lg=\"4\">\r\n                                    <TaskCard data={d} currentUser={currentUser} updater={updater} />\r\n                                </Col>)\r\n                        })\r\n                    )}\r\n\r\n                    {\r\n                        sorting.priority !== \"default\" && (\r\n                            task.filter((f) => f.priority === sorting.priority)\r\n                                .map((d) => {\r\n                                    return (\r\n                                        <Col key={d.id} xs=\"12\" lg=\"4\">\r\n                                            <TaskCard data={d} currentUser={currentUser} updater={updater} />\r\n                                        </Col>\r\n                                    )\r\n                                })\r\n                        )\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport Toggle from \"react-toggle\";\r\nimport { useColorScheme } from \"./colorScheme\";\r\nimport \"./darkmode.css\"\r\n\r\nexport const DarkModeToggle = () => {\r\n  const { isDark, setIsDark } = useColorScheme();\r\n  return (\r\n    <Toggle\r\n      checked={isDark}\r\n      onChange={({ target }) => setIsDark(target.checked)}\r\n      icons={{ checked: \"🌙\", unchecked: \"🔆\" }}\r\n      aria-label=\"Dark mode toggle\"\r\n    />\r\n  );\r\n};","import React from \"react\"\nimport Signup from \"./Signup\"\nimport { AuthProvider } from \"../contexts/AuthContext\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Login from \"./Login\"\nimport PrivateRoute from \"./PrivateRoute\"\nimport ForgotPassword from \"./ForgotPassword\"\nimport UpdateProfile from \"./UpdateProfile\"\nimport TaskList from \"./TaskList\"\nimport { DarkModeToggle } from \"./DarkMode/togler\"\n\nfunction App() {\n  return (\n    <>\n    <div style={{position:\"fixed\",top:\"15px\",right:\"40px\",zIndex:\"10\"}}>\n      <DarkModeToggle />\n      </div>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"https://sifan-jhetam.github.io/task-master/\" component={TaskList} />\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/forgot-password\" component={ForgotPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n   \n    </>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}