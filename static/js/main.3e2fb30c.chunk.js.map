{"version":3,"sources":["firebase.js","contexts/AuthContext.js","services/fireApi.js","components/Signup.js","components/DarkMode/colorScheme.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/NavBar.js","components/test.js","components/TaskCard.js","components/InputForm.js","components/sortingList.js","components/TaskList.js","components/DarkMode/togler.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","AuthContext","React","createContext","currentUser","useAuth","useContext","AuthProvider","children","useState","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail_1","updateEmail","updatePassword_1","updatePassword","Provider","getData","taskRef","collection","getDocs","createNewCollection","usersCollectionRef","addDoc","taskName","discription","updataTask","id","newData","taskDocRef","doc","setDoc","DeleteTask","deleteDoc","addTask","data","addRef","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Container","className","style","minHeight","maxWidth","Card","Body","Alert","variant","Form","onSubmit","Group","Label","Control","type","ref","required","Button","disabled","to","useColorSchemeState","createPersistedState","useColorScheme","systemPrefersDark","useMediaQuery","query","undefined","isDark","setIsDark","useMemo","document","body","classList","add","remove","Login","console","log","color","bgcolor","backgroundColor","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","NavBar","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Text","onClick","Test","getTask","dd","docs","map","createUser","TaskCard","updater","updateModal","setUpdateModal","inputData","description","priority","status","setInputData","marginBottom","Row","Col","xs","lg","Title","Link","delete_task","title","open","onOk","onCancel","okText","cancelText","padding","onChange","persist","prev","temp","target","handleTask","wrap","width","options","label","as","rows","handleDesc","InputForm","SortingList","setSorting","sorting","handleSorting","ch","TaskList","task","setTask","count","setCount","bgColor","getAllData","margin","boxShadow","marginTop","mx","d","key","filter","f","DarkModeToggle","checked","icons","unchecked","aria-label","App","exact","path","ReactDOM","StrictMode","getElementById"],"mappings":"oWAMMA,EAAKC,YAAc,CACvBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,cACnBC,MAAO,6CAGIC,EAAOC,YAAQT,GAEfU,EAAGC,YAAaX,GCbvBY,EAAcC,IAAMC,gBACfN,EAAKO,YAET,SAASC,IACd,OAAOC,qBAAWL,GAGb,SAASM,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EACHC,qBADG,mBAClCL,EADkC,KACrBM,EADqB,OAEXD,oBAAS,GAFE,mBAElCE,EAFkC,KAEzBC,EAFyB,KA4BzCC,qBAAU,WAMR,OALoBhB,EAAKiB,oBAAmB,SAAAC,GAC1CL,EAAeK,GACfH,GAAW,QAIZ,IAEH,IAAMI,EAAQ,CACZZ,cACAa,MA/BF,SAAeC,EAAOC,GACpB,OAAOC,YAA2BvB,EAAKqB,EAAOC,IA+B9CE,OApCF,SAAgBH,EAAOC,GACrB,OAAOG,YAA+BzB,EAAKqB,EAAOC,IAoClDI,OA7BF,WACE,OAAOC,YAAQ3B,IA6Bf4B,cA1BF,SAAuBP,GACrB,OAAOQ,YAAuB7B,EAAKqB,IA0BnCS,cAvBF,SAAuBT,GACrB,OAAOU,YAAY/B,EAAKO,YAAYc,IAuBpCW,iBApBF,SAA0BV,GACxB,OAAOW,YAAejC,EAAKO,YAAYe,KAsBzC,OACE,kBAAClB,EAAY8B,SAAb,CAAsBf,MAAOA,IACzBL,GAAWH,G,oBCvDZ,SAASwB,EAAQd,GACtB,IAAMe,EAAUC,YAAWnC,EAAImB,GAC/B,OAAOiB,YAAQF,GAGV,SAASG,EAAoBlB,GAElC,IAAMmB,EAAqBH,YAAWnC,EAAImB,GAC1C,OAAOoB,YAAOD,EAAoB,CAChCE,SAAU,YACVC,YAAa,eAKV,SAASC,EAAWC,EAAIC,EAAS5B,GACtC,IAAM6B,EAAaC,YAAI9C,EAAIgB,EAAM2B,GACjC,OAAOI,YAAOF,EAAYD,GAIrB,SAASI,EAAWL,EAAItC,GAC7B,IAAMwC,EAAaC,YAAI9C,EAAIK,EAAYc,MAAOwB,GAE9C,OAAOM,YAAUJ,GAIZ,SAASK,EAAQlC,EAAMmC,GAC5B,IAAIC,EAASjB,YAAWnC,EAAIgB,GAC5B,OAAOuB,YAAOa,EAAQD,GC7BT,SAASE,IACtB,IAAMC,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBACnBjC,EAAWhB,IAAXgB,OAJuB,EAKLZ,mBAAS,IALJ,mBAKxBgD,EALwB,KAKjBC,EALiB,OAMDjD,oBAAS,GANR,mBAMxBE,EANwB,KAMfC,EANe,KAOzB+C,EAAUC,uBAPe,4CAS/B,WAA4BC,GAA5B,SAAAC,EAAA,yDACED,EAAEE,iBAEER,EAAYS,QAAQhD,QAAUwC,EAAmBQ,QAAQhD,MAH/D,yCAIW0C,EAAS,2BAJpB,uBAQIA,EAAS,IACT9C,GAAW,GATf,SAUmBS,EAAOgC,EAASW,QAAQhD,MAAOuC,EAAYS,QAAQhD,OAVtE,cAWIoB,EAAoBiB,EAASW,QAAQhD,OACrC2C,EAAQM,KAAK,KAZjB,kDAcIP,EAAS,+BAdb,QAiBE9C,GAAW,GAjBb,2DAT+B,sBA6B/B,OACE,oCACE,kBAACsD,EAAA,EAAD,CACAC,UAAU,mDACVC,MAAO,CAAEC,UAAW,UAEpB,yBAAKF,UAAU,QAAQC,MAAO,CAAEE,SAAU,UAC1C,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,KACE,wBAAIL,UAAU,oBAAd,WACCV,GAAS,kBAACgB,EAAA,EAAD,CAAOC,QAAQ,UAAUjB,GACnC,kBAACkB,EAAA,EAAD,CAAMC,SAxCiB,6CAyCrB,kBAACD,EAAA,EAAKE,MAAN,CAAYnC,GAAG,SACb,kBAACiC,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,QAAQC,IAAK5B,EAAU6B,UAAQ,KAEpD,kBAACP,EAAA,EAAKE,MAAN,CAAYnC,GAAG,YACb,kBAACiC,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,WAAWC,IAAK1B,EAAa2B,UAAQ,KAE1D,kBAACP,EAAA,EAAKE,MAAN,CAAYnC,GAAG,oBACb,kBAACiC,EAAA,EAAKG,MAAN,8BACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,WAAWC,IAAKzB,EAAoB0B,UAAQ,KAEjE,kBAACC,EAAA,EAAD,CAAQC,SAAUzE,EAASwD,UAAU,QAAQa,KAAK,UAAlD,cAMN,yBAAKb,UAAU,0BAAf,4BAC2B,kBAAC,IAAD,CAAMkB,GAAG,UAAT,c,sBC/D3BC,EAAsBC,YAAqB,eAE1C,SAASC,IACd,IAAMC,EAAoBC,wBACxB,CACEC,MAAO,qCAETC,GAL6B,EAQHN,IARG,mBAQxBO,EARwB,KAQhBC,EARgB,KASzB9E,EAAQ+E,mBACZ,uBAAkBH,IAAXC,IAAyBJ,EAAoBI,IACpD,CAACA,EAAQJ,IAWX,OARA5E,qBAAU,WACJG,EACFgF,SAASC,KAAKC,UAAUC,IAAI,QAE5BH,SAASC,KAAKC,UAAUE,OAAO,UAEhC,CAACpF,IAEG,CACL6E,OAAQ7E,EACR8E,aCvBW,SAASO,IACtB,IAAMhD,EAAWC,mBACXC,EAAcD,mBACZrC,EAAUZ,IAAVY,MAHsB,EAIJR,mBAAS,IAJL,mBAIvBgD,EAJuB,KAIhBC,EAJgB,OAKAjD,oBAAS,GALT,mBAKvBE,EALuB,KAKdC,EALc,KAMxB+C,EAAUC,uBANc,4CAQ9B,WAA4BC,GAA5B,SAAAC,EAAA,6DACED,EAAEE,iBADJ,SAIIL,EAAS,IACT9C,GAAW,GALf,SAMUK,EAAMoC,EAASW,QAAQhD,MAAOuC,EAAYS,QAAQhD,OAN5D,OAOI2C,EAAQM,KAAK,gBAPjB,gDASIP,EAAS,oBACT4C,QAAQC,IAAR,MAVJ,QAaE3F,GAAW,GAbb,0DAR8B,0BAyB1B4F,EAAQ,GACRC,EAAU,GAUd,OAZiBjB,IAAXK,QAIJW,EAAQ,QACRC,EAAU,SAGVA,EAAU,QACVD,EAAQ,SAIR,oCACE,kBAACtC,EAAA,EAAD,CACEC,UAAU,mDACVC,MAAO,CAAEC,UAAW,QAASmC,MAAMA,IAEnC,yBAAKrC,UAAU,QAAQC,MAAO,CAAEE,SAAU,UACxC,kBAACC,EAAA,EAAD,CAAMH,MAAO,CAAEsC,gBAAiBD,EAASD,MAAOA,IAC9C,kBAACjC,EAAA,EAAKC,KAAN,KACE,wBAAIL,UAAU,oBAAd,UACCV,GAAS,kBAACgB,EAAA,EAAD,CAAOC,QAAQ,UAAUjB,GACnC,kBAACkB,EAAA,EAAD,CAAMC,SA/CY,6CAgDhB,kBAACD,EAAA,EAAKE,MAAN,CAAYnC,GAAG,SACb,kBAACiC,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,QAAQC,IAAK5B,EAAU6B,UAAQ,KAEpD,kBAACP,EAAA,EAAKE,MAAN,CAAYnC,GAAG,YACb,kBAACiC,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,WAAWC,IAAK1B,EAAa2B,UAAQ,KAE1D,kBAACC,EAAA,EAAD,CAAQC,SAAUzE,EAASwD,UAAU,QAAQa,KAAK,UAAlD,WAIF,yBAAKb,UAAU,0BACb,kBAAC,IAAD,CAAMkB,GAAG,oBAAT,uBAIN,yBAAKlB,UAAU,0BAAf,oBACmB,kBAAC,IAAD,CAAMkB,GAAG,WAAT,e,aCpEd,SAASsB,EAAT,GAA0D,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,6BAC9D1G,EAAgBC,IAAhBD,YAER,OACE,kBAAC,QAAD,iBACM0G,EADN,CAEEC,OAAQ,SAAAC,GACN,OAAO5G,EAAc,kBAACwG,EAAcI,GAAY,kBAAC,WAAD,CAAU3B,GAAG,eCNtD,SAAS4B,IACtB,IAAM5D,EAAWC,mBACT7B,EAAkBpB,IAAlBoB,cAF+B,EAGbhB,mBAAS,IAHI,mBAGhCgD,EAHgC,KAGzBC,EAHyB,OAITjD,mBAAS,IAJA,mBAIhCyG,EAJgC,KAIvBC,EAJuB,OAKT1G,oBAAS,GALA,mBAKhCE,EALgC,KAKvBC,EALuB,iDAOvC,WAA4BiD,GAA5B,SAAAC,EAAA,6DACED,EAAEE,iBADJ,SAIIoD,EAAW,IACXzD,EAAS,IACT9C,GAAW,GANf,SAOUa,EAAc4B,EAASW,QAAQhD,OAPzC,OAQImG,EAAW,6CARf,kDAUIzD,EAAS,4BAVb,QAaE9C,GAAW,GAbb,2DAPuC,sBAuBvC,OACE,oCACE,kBAACsD,EAAA,EAAD,CACAC,UAAU,mDACVC,MAAO,CAAEC,UAAW,UAEpB,yBAAKF,UAAU,QAAQC,MAAO,CAAEE,SAAU,UAC1C,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,KACE,wBAAIL,UAAU,oBAAd,kBACCV,GAAS,kBAACgB,EAAA,EAAD,CAAOC,QAAQ,UAAUjB,GAClCyD,GAAW,kBAACzC,EAAA,EAAD,CAAOC,QAAQ,WAAWwC,GACtC,kBAACvC,EAAA,EAAD,CAAMC,SAnCyB,6CAoC7B,kBAACD,EAAA,EAAKE,MAAN,CAAYnC,GAAG,SACb,kBAACiC,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,QAAQC,IAAK5B,EAAU6B,UAAQ,KAEpD,kBAACC,EAAA,EAAD,CAAQC,SAAUzE,EAASwD,UAAU,QAAQa,KAAK,UAAlD,mBAIF,yBAAKb,UAAU,0BACb,kBAAC,IAAD,CAAMkB,GAAG,UAAT,YAIN,yBAAKlB,UAAU,0BAAf,oBACmB,kBAAC,IAAD,CAAMkB,GAAG,WAAT,eCjDV,SAAS+B,IACtB,IAAM/D,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBAHW,EAImBjD,IAAjDD,EAJ8B,EAI9BA,YAAayB,EAJiB,EAIjBA,iBAAkBF,EAJD,EAICA,cAJD,EAKZlB,mBAAS,IALG,mBAK/BgD,EAL+B,KAKxBC,EALwB,OAMRjD,oBAAS,GAND,mBAM/BE,EAN+B,KAMtBC,EANsB,KAOhC+C,EAAUC,uBAPsB,IAuChC4C,EAAQ,GACRC,EAAU,GAUhB,OAZiBjB,IAAXK,QAIAW,EAAQ,QACRC,EAAU,SAGVA,EAAU,QACVD,EAAQ,SAIZ,oCACE,kBAACtC,EAAA,EAAD,CACAC,UAAU,mDACVC,MAAO,CAAEC,UAAW,UAEpB,yBAAKF,UAAU,QAAQC,MAAO,CAAEE,SAAU,UAC1C,kBAACC,EAAA,EAAD,CAAMH,MAAO,CAACsC,gBAAgBD,EAASD,MAAMA,IAC3C,kBAACjC,EAAA,EAAKC,KAAN,KACE,wBAAIL,UAAU,oBAAd,kBACCV,GAAS,kBAACgB,EAAA,EAAD,CAAOC,QAAQ,UAAUjB,GACnC,kBAACkB,EAAA,EAAD,CAAMC,SApDd,SAAsBf,GAEpB,GADAA,EAAEE,iBACER,EAAYS,QAAQhD,QAAUwC,EAAmBQ,QAAQhD,MAC3D,OAAO0C,EAAS,0BAGlB,IAAM2D,EAAW,GACjBzG,GAAW,GACX8C,EAAS,IAELL,EAASW,QAAQhD,QAAUZ,EAAYc,OACzCmG,EAASpD,KAAKtC,EAAc0B,EAASW,QAAQhD,QAE3CuC,EAAYS,QAAQhD,OACtBqG,EAASpD,KAAKpC,EAAiB0B,EAAYS,QAAQhD,QAGrDsG,QAAQC,IAAIF,GACTG,MAAK,WACJ7D,EAAQM,KAAK,mBAEdwD,OAAM,WACL/D,EAAS,+BAEVgE,SAAQ,WACP9G,GAAW,QA4BP,kBAAC+D,EAAA,EAAKE,MAAN,CAAYnC,GAAG,SACb,kBAACiC,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,QACLC,IAAK5B,EACL6B,UAAQ,EACRyC,aAAcvH,EAAYc,SAG9B,kBAACyD,EAAA,EAAKE,MAAN,CAAYnC,GAAG,YACb,kBAACiC,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,WACLC,IAAK1B,EACLqE,YAAY,kCAGhB,kBAACjD,EAAA,EAAKE,MAAN,CAAYnC,GAAG,oBACb,kBAACiC,EAAA,EAAKG,MAAN,8BACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,WACLC,IAAKzB,EACLoE,YAAY,kCAGhB,kBAACzC,EAAA,EAAD,CAAQC,SAAUzE,EAASwD,UAAU,QAAQa,KAAK,UAAlD,aAMN,yBAAKb,UAAU,0BACb,kBAAC,IAAD,CAAMkB,GAAG,KAAT,c,+BC3FD,SAASwC,IAAU,IAAD,EAEKpH,mBAAS,IAFd,mBAEdgD,EAFc,KAEPC,EAFO,OAGWrD,IAAxBD,EAHa,EAGbA,YAAamB,EAHA,EAGAA,OACfoC,EAAUC,uBAEZ4C,EAAQ,OANS,4CAerB,sBAAA1C,EAAA,6DACIJ,EAAS,IADb,kBAIcnC,IAJd,OAKQoC,EAAQM,KAAK,UALrB,gDAOQP,EAAS,qBAPjB,0DAfqB,sBA0BrB,OAjBI8C,EAJahB,IAAXK,OAIM,OAGA,YAeR,oCAqBI,kBAACiC,EAAA,EAAD,CAAQC,OAAO,KAAK5D,UAAU,mBAAmBC,MAAO,CAAEsC,gBAAiBF,IACvE,kBAACtC,EAAA,EAAD,KAEI,kBAAC4D,EAAA,EAAOE,MAAR,CAAcC,KAAK,SAAnB,gBACA,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBjE,UAAU,wCAC3B,kBAACkE,EAAA,EAAD,CAAKlE,UAAU,WACX,kBAAC2D,EAAA,EAAOQ,KAAR,sBACkB,uBAAGL,KAAK,UAAU7H,EAAYc,QAGhD,kBAACiE,EAAA,EAAD,CAAQhB,UAAU,OAAOO,QAAQ,SAAS6D,QA3DzC,4CA2DD,UAIA,kBAACpD,EAAA,EAAD,CAAQT,QAAQ,UAAU6D,QAAS,kBAAM5E,EAAQM,KAAK,gCAAtD,WAICR,GAAS,kBAACgB,EAAA,EAAD,CAAOC,QAAQ,UAAUjB,O,YCvEpD,SAAS+E,IAGZ,IAAMvG,EAAUC,YAAWnC,EAAG,mBAC1B0I,EAAO,uCAAG,8BAAA3E,EAAA,sEACO3B,YAAQF,GADf,OACNiB,EADM,OAEJwF,EAAGxF,EAAKyF,KAAKC,KAAI,SAAC/F,GAAD,mBAAC,eACjBA,EAAIK,QADY,IAEnBR,GAAGG,EAAIH,QAEX4D,QAAQC,IAAImC,GANF,2CAAH,qDAiBTG,EAAU,uCAAG,4BAAA/E,EAAA,6DACTzB,EAAqBH,YAAWnC,EAAI,iBAD3B,SAEQuC,YAAOD,EAAoB,CAChDE,SAAU,aACVC,YAAa,eAJA,yDAAH,qDAOhB,OACI,oCACI,4BAAQ+F,QAAS,kBAAME,MAAvB,SACA,4BAAQF,QAAS,kBAAIM,MAArB,W,iDC3BO,SAASC,EAAT,GAAmD,IAA/B5F,EAA8B,EAA9BA,KAAM9C,EAAwB,EAAxBA,YAAa2I,EAAW,EAAXA,QAG9CvC,EAAQ,GACRC,EAAU,GAFGjB,IAAXK,QAIFW,EAAQ,QACRC,EAAU,SAGVA,EAAU,QACVD,EAAQ,SAXiD,MAazB/F,oBAAS,GAbgB,mBAaxDuI,EAbwD,KAa3CC,EAb2C,iDAiB7D,sBAAAnF,EAAA,+EAGcrB,EAAWS,EAAKR,GAAIwG,EAAW9I,EAAYc,OAHzD,OAIQ+H,GAAe,GACfF,IALR,gDAQQzC,QAAQC,IAAR,MARR,0DAjB6D,kEA4B7D,sBAAAzC,EAAA,+EAGcf,EAAWG,EAAKR,GAAItC,GAHlC,OAIQ2I,IAJR,+CAOQzC,QAAQC,IAAR,MAPR,yDA5B6D,4BAwC7B9F,mBAAS,CACrC8B,SAAUW,EAAKX,SACf4G,YAAajG,EAAKiG,YAClBC,SAAUlG,EAAKkG,SACfC,OAAQnG,EAAKmG,SA5C4C,mBAwCxDH,EAxCwD,KAwC7CI,EAxC6C,KAsG7D,OACI,oCACI,kBAAC/E,EAAA,EAAD,CAAMH,MAAO,CAAEmF,aAAc,OAAQ7C,gBAAiBD,EAASD,MAAOA,IAClE,kBAACjC,EAAA,EAAKC,KAAN,KACI,kBAACgF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,MACZ,kBAACpF,EAAA,EAAKqF,MAAN,KAAa1G,EAAKX,WAEtB,kBAACkH,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACQ,SAAlBzG,EAAKkG,UAAuB,uBAAGjF,UAAU,oBAAoBC,MAAO,CAAEoC,MAAO,eAGtF,kBAACjC,EAAA,EAAK+D,KAAN,KACKpF,EAAKiG,aAEV,kBAAC5E,EAAA,EAAKsF,KAAN,CAAWtB,QAAS,kBArHyB,0CAqHnBuB,IAAe7B,KAAK,KAA9C,UACA,kBAAC1D,EAAA,EAAKsF,KAAN,CAAWtB,QAAS,kBAAMU,GAAe,IAAOhB,KAAK,KAArD,YAGPe,GACG,kBAAC,IAAD,CACIe,MAAM,cACNC,KAAK,OACLC,KA7H6C,2CA8H7CC,SAAU,kBAAMjB,GAAe,IAC/BkB,OAAO,cACPC,WAAW,SACXhG,MAAO,CAACiG,QAAQ,SAEhB,oCACI,kBAAC1F,EAAA,EAAD,KACI,kBAAC6E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACZ,kBAAChF,EAAA,EAAKE,MAAN,CAAYV,UAAU,QAClB,kBAACQ,EAAA,EAAKG,MAAN,aACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOhE,MAAOkI,EAAU3G,SAAUqF,YAAY,cAAc0C,SAAU,SAACzG,GAAD,OA1F7H,SAAoBA,GAChBA,EAAE0G,UACFjB,GAAa,SAACkB,GACV,IAAIC,EAAI,eAAOD,GAEf,OADAC,EAAKlI,SAAWsB,EAAE6G,OAAO1J,MAClByJ,KAqFqHE,CAAW9G,QAInH,kBAAC4F,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACZ,kBAAChF,EAAA,EAAKG,MAAN,iBACA,kBAAC,IAAD,CAAO8F,MAAI,GACP,kBAAC,IAAD,CACIjD,aAAa,MACbC,YAAY,kBACZxD,MAAO,CAAEyG,MAAO,KAChB7J,MAAOkI,EAAUE,SACjBkB,SApFxC,SAAwBzG,GACpByF,GAAa,SAACkB,GACV,IAAIC,EAAI,eAAOD,GAEf,OADAC,EAAKrB,SAAWvF,EACT4G,MAiFyBK,QAAS,CACL,CAAE9J,MAAO,MAAO+J,MAAO,OACvB,CAAE/J,MAAO,SAAU+J,MAAO,UAC1B,CAAE/J,MAAO,OAAQ+J,MAAO,aAMxC,kBAACtB,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACZ,kBAAChF,EAAA,EAAKG,MAAN,eACA,kBAAC,IAAD,CAAO8F,MAAI,GACP,kBAAC,IAAD,CACIjD,aAAa,UACbC,YAAY,gBACZ5G,MAAOkI,EAAUG,OACjBjF,MAAO,CAAEyG,MAAO,KAChBP,SA9FxC,SAAsBzG,GAClByC,QAAQC,IAAI1C,GACZyF,GAAa,SAACkB,GACV,IAAIC,EAAI,eAAOD,GAEf,OADAC,EAAKpB,OAASxF,EACP4G,MA0FyBK,QAAS,CACL,CAAE9J,MAAO,UAAW+J,MAAO,WAC3B,CAAE/J,MAAO,YAAa+J,MAAO,mBAQjD,kBAACpG,EAAA,EAAKE,MAAN,CAAYV,UAAU,QAClB,kBAACQ,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CAAciG,GAAG,WAAWhK,MAAOkI,EAAUC,YAAa8B,KAAM,EAAGX,SAAU,SAACzG,GAAD,OA5HzG,SAAoBA,GAChBA,EAAE0G,UACFjB,GAAa,SAACkB,GACV,IAAIC,EAAI,eAAOD,GAEf,OADAC,EAAKtB,YAActF,EAAE6G,OAAO1J,MACrByJ,KAuHiGS,CAAWrH,WCvLhH,SAASsH,GAAT,GAA8C,IAAzB/K,EAAwB,EAAxBA,YAAa2I,EAAW,EAAXA,QAAW,EAE1BtI,mBAAS,CACvC8B,SAAU,GACV4G,YAAa,GACbC,SAAU,MACVC,OAAQ,YANgD,mBAErDH,EAFqD,KAE1CI,EAF0C,iDA6C1D,WAA4BzF,GAA5B,SAAAC,EAAA,6DACED,EAAEE,iBACFuC,QAAQC,IAAI2C,GAFd,kBAIUjG,EAAQ7C,EAAYc,MAAOgI,GAJrC,OAMII,GAAa,SAACkB,GACZ,IAAIC,EAAOD,EAKX,OAJAC,EAAKpB,OAAS,UACdoB,EAAKrB,SAAW,MAChBqB,EAAKlI,SAAS,GACdkI,EAAKtB,YAAY,GACVsB,KAET1B,IAdJ,gDAiBIzC,QAAQC,IAAR,MAjBJ,0DA7C0D,sBAkE1D,OACE,oCACE,kBAAC5B,EAAA,EAAD,CAAMC,SApEgD,6CAqEpD,kBAAC4E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACd,kBAAChF,EAAA,EAAKE,MAAN,CAAYV,UAAU,QACpB,kBAACQ,EAAA,EAAKG,MAAN,aACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOhE,MAAOkI,EAAU3G,SAAUqF,YAAY,cAAc0C,SAAU,SAACzG,GAAD,OAhErG,SAAoBA,GAClBA,EAAE0G,UACFjB,GAAa,SAACkB,GACZ,IAAIC,EAAI,eAAOD,GAEf,OADAC,EAAKlI,SAAUsB,EAAE6G,OAAO1J,MACjByJ,KA2DiGE,CAAW9G,QAI/G,kBAAC4F,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACd,kBAAChF,EAAA,EAAKG,MAAN,iBACA,kBAAC,IAAD,CAAO8F,MAAI,GACT,kBAAC,IAAD,CACEjD,aAAa,MACbC,YAAY,kBACZxD,MAAO,CAAEyG,MAAO,KAChB7J,MAAOkI,EAAUE,SACjBkB,SA1Dd,SAAwBzG,GAEtByF,GAAa,SAACkB,GACZ,IAAIC,EAAI,eAAOD,GAEf,OADAC,EAAKrB,SAAWvF,EACT4G,MAsDGK,QAAS,CACP,CAAE9J,MAAO,MAAO+J,MAAO,OACvB,CAAE/J,MAAO,SAAU+J,MAAO,UAC1B,CAAE/J,MAAO,OAAQ+J,MAAO,aAMhC,kBAACtB,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACd,kBAAChF,EAAA,EAAKG,MAAN,eACA,kBAAC,IAAD,CAAO8F,MAAI,GACT,kBAAC,IAAD,CACEjD,aAAa,UACbC,YAAY,gBACZ5G,MAAOkI,EAAUG,OACjBjF,MAAO,CAAEyG,MAAO,KAChBP,SAnEd,SAAsBzG,GAEpByF,GAAa,SAACkB,GACZ,IAAIC,EAAI,eAAMD,GAEd,OADAC,EAAKpB,OAASxF,EACP4G,MA+DGK,QAAS,CACP,CAAE9J,MAAO,UAAW+J,MAAO,WAC3B,CAAE/J,MAAO,YAAa+J,MAAO,mBAQvC,kBAACpG,EAAA,EAAKE,MAAN,CAAYV,UAAU,QACpB,kBAACQ,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CAAciG,GAAG,WAAWhK,MAAOkI,EAAUC,YAAa8B,KAAM,EAAGX,SAAU,SAACzG,GAAD,OAlGrF,SAAoBA,GAClBA,EAAE0G,UACFjB,GAAa,SAACkB,GACZ,IAAIC,EAAI,eAAMD,GAEd,OADAC,EAAKtB,YAActF,EAAE6G,OAAO1J,MACrByJ,KA6FiFS,CAAWrH,OAEjG,kBAACsB,EAAA,EAAD,CAAQH,KAAK,UAAb,iBCxHD,SAASoG,GAAT,GAA2C,IAArBC,EAAoB,EAApBA,WAAWC,EAAS,EAATA,QAEpC,SAASC,EAAc1H,EAAE2H,GACf,WACFH,GAAW,SAACb,GACR,IAAIC,EAAKD,EAET,OADAC,EAAKrB,SAASvF,EACP4G,KAKXY,GAAW,SAACb,GACR,IAAIC,EAAKD,EAET,OADAC,EAAKpB,OAAOxF,EACL4G,KAGfnE,QAAQC,IAAI1C,EAfN,YAmBV,OAEI,oCACQ,kBAAC4F,EAAA,EAAD,CAAKE,GAAG,KACR,kBAAC,IAAD,CAAOiB,MAAI,GACT,iDACF,kBAAC,IAAD,CACEjD,aAAa,SACbC,YAAY,kBACZ5G,MAAOsK,EAAQlC,SACfhF,MAAO,CAAEyG,MAAO,KACjBP,SAAU,SAACzG,GAAD,OAAK0H,EAAc1H,IAC5BiH,QAAS,CACP,CAAE9J,MAAO,UAAW+J,MAAO,WAC3B,CAAE/J,MAAO,MAAO+J,MAAO,OACvB,CAAE/J,MAAO,SAAU+J,MAAO,QAC1B,CAAE/J,MAAO,OAAQ+J,MAAO,aAO5B,kBAACtB,EAAA,EAAD,CAAKE,GAAG,KACR,kBAAC,IAAD,CAAOiB,MAAI,GACX,+CACA,kBAAC,IAAD,CACEjD,aAAa,UACbC,YAAY,gBACZ5G,MAAOsK,EAAQjC,OACfjF,MAAO,CAAEyG,MAAO,KAChBP,SAAU,SAACzG,GAAD,OAAK0H,EAAc1H,IAC7BiH,QAAS,CACP,CAAE9J,MAAO,UAAW+J,MAAO,WAC3B,CAAE/J,MAAO,UAAW+J,MAAO,WAC3B,CAAE/J,MAAO,YAAa+J,MAAO,mBCjDlC,SAASU,KAAY,IAAD,EAEPhL,mBAAS,IAFF,mBAExBiL,EAFwB,KAElBC,EAFkB,OAGPlL,mBAAS,GAHF,mBAG1BmL,EAH0B,KAGnBC,EAHmB,KAIvBzL,EAAgBC,IAAhBD,YAJuB,EAKDK,mBAAS,CACnC2I,SAAU,UACVC,OAAQ,YAPmB,mBAKxBiC,EALwB,KAKfD,EALe,KAU3B7E,EAAQ,GACRsF,EAAQ,GAFKtG,IAAXK,QAGQW,EAAQ,QAASsF,EAAQ,SACjCtF,EAAQ,QAASsF,EAAQ,SAE/BjL,qBAAU,WAAM,4CAEZ,8BAAAiD,EAAA,+EAEyB9B,EAAQ5B,EAAYc,OAF7C,OAEYgC,EAFZ,OAGcwF,EAAKxF,EAAKyF,KAAKC,KAAI,SAAC/F,GAAD,mBAAC,eACnBA,EAAIK,QADc,IAErBR,GAAIG,EAAIH,QAEZ4D,QAAQC,IAAImC,GACZiD,EAAQjD,GARhB,gDAWQpC,QAAQC,IAAI,sBAXpB,0DAFY,sBACZD,QAAQC,IAAI,QADA,mCAgBZwF,KACD,CAACH,IAYJ,IAAI7C,EAAU,WACV8C,GAAS,SAACrB,GAAD,OAAUA,EAAO,MAI9B,OACI,oCACI,kBAAC3C,EAAD,MACA,kBAAC3D,EAAA,EAAD,KACI,kBAACsF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IACZvF,MAAO,CAAE4H,OAAQ,OAAQC,UAAW,kCACpC1C,aAAc,OAAQ2C,UAAW,OAAQ7B,QAAS,OAAQ3D,gBAAiBoF,IAE3E,kBAACX,GAAD,CAAW/K,YAAaA,EAAa2I,QAASA,MAItD,kBAACS,EAAA,EAAD,CAAKpF,MAAO,CAAEoC,MAAOA,IACjB,kBAAC4E,GAAD,CAAaC,WAAYA,EAAYC,QAASA,KAElD,kBAAC9B,EAAA,EAAD,CAAK2C,GAAI,GACgB,WAApBb,EAAQlC,UACLsC,EAAK9C,KAAI,SAACwD,GACN,OACI,kBAAC3C,EAAA,EAAD,CAAK4C,IAAKD,EAAE1J,GAAIgH,GAAG,KAAKC,GAAG,KACvB,kBAACb,EAAD,CAAU5F,KAAMkJ,EAAGhM,YAAaA,EAAa2I,QAASA,QAO7C,YAArBuC,EAAQlC,UAEJsC,EAAKY,QAAO,SAACC,GAAD,OAAOA,EAAEnD,WAAakC,EAAQlC,YACrCR,KAAI,SAACwD,GAEF,OACI,kBAAC3C,EAAA,EAAD,CAAK4C,IAAKD,EAAE1J,GAAIgH,GAAG,KAAKC,GAAG,KACvB,kBAACb,EAAD,CAAU5F,KAAMkJ,EAAGhM,YAAaA,EAAa2I,QAASA,W,yBC3FrFyD,I,OAAiB,WAAO,IAAD,EACJhH,IAAtBK,EAD0B,EAC1BA,OAAQC,EADkB,EAClBA,UAChB,OACE,kBAAC,KAAD,CACE2G,QAAS5G,EACTyE,SAAU,gBAAGI,EAAH,EAAGA,OAAH,OAAgB5E,EAAU4E,EAAO+B,UAC3CC,MAAO,CAAED,QAAS,eAAME,UAAW,gBACnCC,aAAW,uBC0BFC,OAxBf,WACE,OACE,oCACE,yBAAK1I,UAAU,kBACb,kBAAC,GAAD,OAEF,kBAAC,IAAD,KACE,kBAAC5D,EAAD,KACE,kBAAC,SAAD,KACE,kBAACoG,EAAD,CAAcmG,OAAK,EAACC,KAAK,IAAIlG,UAAW4E,KACxC,kBAAC9E,EAAD,CAAcmG,OAAK,EAACC,KAAK,eAAelG,UAAW4E,KACnD,kBAAC9E,EAAD,CAAcoG,KAAK,kBAAkBlG,UAAWO,IAChD,kBAACT,EAAD,CAAcoG,KAAK,QAAQlG,UAAW2B,IACtC,kBAAC,QAAD,CAAOuE,KAAK,UAAUlG,UAAWzD,IACjC,kBAAC,QAAD,CAAO2J,KAAK,SAASlG,UAAWR,IAChC,kBAAC,QAAD,CAAO0G,KAAK,mBAAmBlG,UAAWI,S,0BCtBtD+F,IAASjG,OACP,kBAAC,IAAMkG,WAAP,KACE,kBAAC,cAAD,KACA,kBAAC,GAAD,QAGFjH,SAASkH,eAAe,W","file":"static/js/main.3e2fb30c.chunk.js","sourcesContent":["// import firebase from \"firebase\"\nimport { initializeApp } from \"firebase/app\"\nimport { getAuth } from \"firebase/auth\"\nimport {getFirestore} from \"firebase/firestore\"\nimport \"firebase/auth\"\n\nconst app =initializeApp({\n  apiKey: \"AIzaSyC_LRyR4l2MOk_hyhKCMe3lILBy3yp1fLc\",\n  authDomain: \"task-manager-dev1.firebaseapp.com\",\n  projectId: \"task-manager-dev1\",\n  storageBucket: \"task-manager-dev1.appspot.com\",\n  messagingSenderId: \"87486177086\",\n  appId: \"1:87486177086:web:1dd6d9f34daecd4d87166f\"\n})\n\nexport const auth = getAuth(app)\nexport default app\nexport const db=getFirestore(app)","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword ,signOut, sendPasswordResetEmail, updateEmail,updatePassword} from \"firebase/auth\"\r\n\r\nconst AuthContext = React.createContext()\r\nconst user=auth.currentUser;\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return createUserWithEmailAndPassword(auth,email, password)\r\n  }\r\n\r\n  function login(email, password) {\r\n    return signInWithEmailAndPassword(auth,email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return signOut(auth)\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return sendPasswordResetEmail(auth,email)\r\n  }\r\n\r\n  function updateEmail_1(email) {\r\n    return updateEmail(auth.currentUser,email)\r\n  }\r\n\r\n  function updatePassword_1(password) {\r\n    return updatePassword(auth.currentUser,password)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail_1,\r\n    updatePassword_1\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import { db } from \"../firebase\";\r\nimport { getDocs, addDoc, collection, updateDoc, deleteDoc, doc, setDoc } from \"firebase/firestore\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\n\r\nexport function getData(email) {\r\n  const taskRef = collection(db, email)\r\n  return getDocs(taskRef);\r\n}\r\n\r\nexport function createNewCollection(email) {\r\n\r\n  const usersCollectionRef = collection(db, email)\r\n  return addDoc(usersCollectionRef, {\r\n    taskName: \"demo task\",\r\n    discription: \"remove it \",\r\n  })\r\n\r\n}\r\n\r\nexport function updataTask(id, newData, user) {\r\n  const taskDocRef = doc(db, user, id)\r\n  return setDoc(taskDocRef, newData)\r\n\r\n}\r\n\r\nexport function DeleteTask(id, currentUser) {\r\n  const taskDocRef = doc(db, currentUser.email, id)\r\n\r\n  return deleteDoc(taskDocRef)\r\n\r\n}\r\n\r\nexport function addTask(user, data) {\r\n  let addRef = collection(db, user)\r\n  return addDoc(addRef, data)\r\n}","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { createNewCollection } from \"../services/fireApi\"\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      let res =await signup(emailRef.current.value, passwordRef.current.value)\r\n      createNewCollection(emailRef.current.value);\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n      className=\"d-flex align-items-center justify-content-center\"\r\n      style={{ minHeight: \"100vh\" }}\r\n    >\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Already have an account? <Link to=\"/login\">Log In</Link>\r\n      </div>\r\n      </div>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useMemo } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport createPersistedState from \"use-persisted-state\";\r\nconst useColorSchemeState = createPersistedState(\"colorScheme\");\r\n\r\nexport function useColorScheme() {\r\n  const systemPrefersDark = useMediaQuery(\r\n    {\r\n      query: \"(prefers-color-scheme: dark)\",\r\n    },\r\n    undefined\r\n  );\r\n\r\n  const [isDark, setIsDark] = useColorSchemeState();\r\n  const value = useMemo(\r\n    () => (isDark === undefined ? !!systemPrefersDark : isDark),\r\n    [isDark, systemPrefersDark]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (value) {\r\n      document.body.classList.add(\"dark\");\r\n    } else {\r\n      document.body.classList.remove(\"dark\");\r\n    }\r\n  }, [value]);\r\n\r\n  return {\r\n    isDark: value,\r\n    setIsDark,\r\n  };\r\n}","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { useColorScheme } from \"./DarkMode/colorScheme\"\n\nexport default function Login() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const { login } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    try {\n      setError(\"\")\n      setLoading(true)\n      await login(emailRef.current.value, passwordRef.current.value)\n      history.push(\"/task-master\")\n    } catch (e) {\n      setError(\"Failed to log in\")\n      console.log(e)\n    }\n\n    setLoading(false)\n  }\n\n  let { isDark } = useColorScheme()\n  let color = \"\"\n  let bgcolor = \"\"\n  if (isDark) {\n    color = \"white\"\n    bgcolor = \"grey\"\n  }\n  else {\n    bgcolor = \"white\"\n    color = \"black\"\n  }\n\n  return (\n    <>\n      <Container\n        className=\"d-flex align-items-center justify-content-center\"\n        style={{ minHeight: \"100vh\", color:color }}\n      >\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n          <Card style={{ backgroundColor: bgcolor, color: color }}>\n            <Card.Body>\n              <h2 className=\"text-center mb-4\">Log In</h2>\n              {error && <Alert variant=\"danger\">{error}</Alert>}\n              <Form onSubmit={handleSubmit}>\n                <Form.Group id=\"email\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control type=\"email\" ref={emailRef} required />\n                </Form.Group>\n                <Form.Group id=\"password\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" ref={passwordRef} required />\n                </Form.Group>\n                <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                  Log In\n                </Button>\n              </Form>\n              <div className=\"w-100 text-center mt-3\">\n                <Link to=\"/forgot-password\">Forgot Password?</Link>\n              </div>\n            </Card.Body>\n          </Card>\n          <div className=\"w-100 text-center mt-2\">\n            Need an account? <Link to=\"/signup\">Sign Up</Link>\n          </div>\n        </div>\n      </Container>\n    </>\n  )\n}\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport { useAuth } from \"../contexts/AuthContext\"\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth()\n\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }}\n    ></Route>\n  )\n}\n","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert , Container} from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link } from \"react-router-dom\"\n\nexport default function ForgotPassword() {\n  const emailRef = useRef()\n  const { resetPassword } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    try {\n      setMessage(\"\")\n      setError(\"\")\n      setLoading(true)\n      await resetPassword(emailRef.current.value)\n      setMessage(\"Check your inbox for further instructions\")\n    } catch {\n      setError(\"Failed to reset password\")\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n      <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Password Reset</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          {message && <Alert variant=\"success\">{message}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Reset Password\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/login\">Login</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n      </div>\n      </Container>\n    </>\n  )\n}\n","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { useColorScheme } from \"./DarkMode/colorScheme\"\n\nexport default function UpdateProfile() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { currentUser, updatePassword_1, updateEmail_1 } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n    }\n\n    const promises = []\n    setLoading(true)\n    setError(\"\")\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail_1(emailRef.current.value))\n    }\n    if (passwordRef.current.value) {\n      promises.push(updatePassword_1(passwordRef.current.value))\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        history.push(\"/task-master\")\n      })\n      .catch(() => {\n        setError(\"Failed to update account\")\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  let { isDark } = useColorScheme()\n    let color = \"\"\n    let bgcolor = \"\"\n    if (isDark) {\n        color = \"white\"\n        bgcolor = \"grey\"\n    }\n    else {\n        bgcolor = \"white\"\n        color = \"black\"\n    }\n\n  return (\n    <>\n      <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\"}}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n      <Card style={{backgroundColor:bgcolor, color:color}}>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                ref={emailRef}\n                required\n                defaultValue={currentUser.email}\n              />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordConfirmRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/\">Cancel</Link>\n      </div>\n      </div>\n      </Container>\n    </>\n  )\n}\n","import { Navbar, Container, Button, Alert, Nav } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useColorScheme } from \"./DarkMode/colorScheme\";\r\n\r\n\r\n\r\nexport function NavBar() {\r\n\r\n    const [error, setError] = useState(\"\")\r\n    const { currentUser, logout } = useAuth()\r\n    const history = useHistory()\r\n    let { isDark } = useColorScheme();\r\n    let color = \"blue\"\r\n\r\n    if (isDark) {\r\n        color = \"grey\"\r\n    }\r\n    else {\r\n        color = \"lightblue\"\r\n    }\r\n\r\n    async function handleLogout() {\r\n        setError(\"\")\r\n\r\n        try {\r\n            await logout()\r\n            history.push(\"/login\")\r\n        } catch {\r\n            setError(\"Failed to log out\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* <Navbar expand=\"lg\" className=\"bg-body-tertiary\">\r\n                <Container>\r\n                    <Navbar.Brand >React-Bootstrap</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n                            <Button className=\"mx-2\" variant=\"danger\" onClick={handleLogout}>\r\n                                LogOut\r\n                            </Button>\r\n\r\n                            <Button variant=\"primary\" onClick={() => history.push(\"task-master/update-profile\")} >\r\n                                Update\r\n                            </Button>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar> */}\r\n\r\n\r\n            <Navbar expand=\"lg\" className=\"bg-body-tertiary\" style={{ backgroundColor: color,  }}>\r\n                <Container>\r\n\r\n                    <Navbar.Brand href=\"#home\">Task manager</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                    <Navbar.Collapse className=\"basic-navbar-nav justify-content-end\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Navbar.Text>\r\n                            Signed in as: <a href=\"#login\">{currentUser.email}</a>\r\n                        </Navbar.Text>\r\n\r\n                        <Button className=\"mx-2\" variant=\"danger\" onClick={handleLogout}>\r\n                            LogOut\r\n                        </Button>\r\n\r\n                        <Button variant=\"primary\" onClick={() => history.push(\"task-master/update-profile\")} >\r\n                            Update\r\n                        </Button>\r\n                        </Nav>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n    \r\n        </>\r\n    )\r\n}","\r\nimport React from \"react\"\r\nimport { db } from \"../firebase\"\r\nimport { collection, doc, getDoc, getDocs, setDoc ,getFirestore, query, addDoc} from \"firebase/firestore\"\r\n\r\nexport function Test() {\r\n\r\n  \r\n    const taskRef = collection(db,\"sifan@gmail.com\",)\r\n    let getTask = async () => {\r\n        let data = await getDocs(taskRef);\r\n        const dd=data.docs.map((doc)=>({\r\n            ...doc.data(),\r\n            id:doc.id,\r\n        }))\r\n        console.log(dd)\r\n}\r\n\r\n// let createUser= async ()=>{\r\n    \r\n//         const collectionId = \"uu11@gmail.com\";\r\n//         const documentId = \"my-document\";\r\n//         const value = { versionUsed: \"V9\" }; \r\n//         setDoc(doc(db, collectionId,\"\"), value); \r\n// }\r\n\r\nconst createUser = async () => {\r\n    const usersCollectionRef = collection(db, 'ddd@gmail.com')\r\n    const document = await addDoc(usersCollectionRef, {\r\n      taskName: \"stack over\" ,\r\n      discription: \"new addedd\",\r\n    })\r\n}\r\nreturn (\r\n    <>\r\n        <button onClick={() => getTask()}>click</button>\r\n        <button onClick={()=>createUser()}>create</button>\r\n    </>\r\n)\r\n}","import React from \"react\"\r\nimport Card from 'react-bootstrap/Card';\r\nimport { updataTask, DeleteTask } from \"../services/fireApi\";\r\nimport { useColorScheme } from \"./DarkMode/colorScheme\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { Modal, Select, Space } from \"antd\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nexport default function TaskCard({ data, currentUser, updater }) {\r\n\r\n    let { isDark } = useColorScheme()\r\n    let color = \"\"\r\n    let bgcolor = \"\"\r\n    if (isDark) {\r\n        color = \"white\"\r\n        bgcolor = \"grey\"\r\n    }\r\n    else {\r\n        bgcolor = \"white\"\r\n        color = \"black\"\r\n    }\r\n    let [updateModal, setUpdateModal] = useState(false);\r\n\r\n\r\n\r\n    async function update_task() {\r\n\r\n        try {\r\n            await updataTask(data.id, inputData, currentUser.email)\r\n            setUpdateModal(false)\r\n            updater()\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    async function delete_task() {\r\n\r\n        try {\r\n            await DeleteTask(data.id, currentUser)\r\n            updater();\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n    let [inputData, setInputData] = useState({\r\n        taskName: data.taskName,\r\n        description: data.description,\r\n        priority: data.priority,\r\n        status: data.status\r\n    })\r\n\r\n    function handleTask(e) {\r\n        e.persist()\r\n        setInputData((prev) => {\r\n            let temp = {...prev}\r\n            temp.taskName = e.target.value;\r\n            return temp\r\n        })\r\n    }\r\n\r\n    function handleDesc(e) {\r\n        e.persist()\r\n        setInputData((prev) => {\r\n            let temp = {...prev}\r\n            temp.description = e.target.value\r\n            return temp\r\n        })\r\n    }\r\n\r\n    function handlePriority(e) {\r\n        setInputData((prev) => {\r\n            let temp = {...prev}\r\n            temp.priority = e\r\n            return temp\r\n        })\r\n    }\r\n\r\n    function handleStatus(e) {\r\n        console.log(e)\r\n        setInputData((prev) => {\r\n            let temp = {...prev}\r\n            temp.status = e\r\n            return temp\r\n        })\r\n    }\r\n\r\n    //   async function handleSubmit(e) {\r\n    //     e.preventDefault();\r\n    //     console.log(inputData)\r\n    //     try {\r\n    //       await addTask(currentUser.email, inputData)\r\n    //       updater()\r\n    //       setInputData((prev) => {\r\n    //         let temp = prev;\r\n    //         temp.status = \"pending\"\r\n    //         temp.priority=\"low\"\r\n    //         return temp\r\n    //       })\r\n    //     }\r\n    //     catch (err) {\r\n    //       console.log(err)\r\n    //     }\r\n    //   }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card style={{ marginBottom: \"20px\", backgroundColor: bgcolor, color: color }}>\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col xs=\"10\" lg=\"10\">\r\n                            <Card.Title>{data.taskName}</Card.Title>\r\n                        </Col>\r\n                        <Col xs=\"2\" lg=\"2\">\r\n                            {data.priority === \"high\" && <i className=\"fas fa-dot-circle\" style={{ color: \"#ff0000\" }}></i>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Card.Text>\r\n                        {data.description}\r\n                    </Card.Text>\r\n                    <Card.Link onClick={() => delete_task()} href=\"#\">Delete</Card.Link>\r\n                    <Card.Link onClick={() => setUpdateModal(true)} href=\"#\">Modify</Card.Link>\r\n                </Card.Body>\r\n            </Card>\r\n            {updateModal && (\r\n                <Modal\r\n                    title=\"Update Task\"\r\n                    open=\"true\"\r\n                    onOk={update_task}\r\n                    onCancel={() => setUpdateModal(false)}\r\n                    okText=\"Update Task\"\r\n                    cancelText=\"cencel\"\r\n                    style={{padding:\"10px\"}}\r\n                >\r\n                    <>\r\n                        <Form >\r\n                            <Row>\r\n                                <Col xs=\"12\" lg=\"6\">\r\n                                    <Form.Group className=\"mb-3\">\r\n                                        <Form.Label>Task</Form.Label>\r\n                                        <Form.Control type=\"text\" value={inputData.taskName} placeholder=\"Enter Task \" onChange={(e) => handleTask(e)} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                                <Col xs=\"12\" lg=\"3\">\r\n                                    <Form.Label>Priority</Form.Label>\r\n                                    <Space wrap >\r\n                                        <Select\r\n                                            defaultValue=\"low\"\r\n                                            placeholder=\"Select priority\"\r\n                                            style={{ width: 120 }}\r\n                                            value={inputData.priority}\r\n                                            onChange={handlePriority}\r\n                                            options={[\r\n                                                { value: 'low', label: 'low' },\r\n                                                { value: 'medium', label: 'medium' },\r\n                                                { value: 'high', label: 'high' },\r\n                                            ]}\r\n                                        />\r\n                                    </Space>\r\n                                </Col>\r\n\r\n                                <Col xs=\"12\" lg=\"3\">\r\n                                    <Form.Label>Status</Form.Label>\r\n                                    <Space wrap >\r\n                                        <Select\r\n                                            defaultValue=\"pending\"\r\n                                            placeholder=\"Select Status\"\r\n                                            value={inputData.status}\r\n                                            style={{ width: 120 }}\r\n                                            onChange={handleStatus}\r\n                                            options={[\r\n                                                { value: 'pending', label: 'pending' },\r\n                                                { value: 'completed', label: 'completed' },\r\n\r\n                                            ]}\r\n                                        />\r\n                                    </Space>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control as=\"textarea\" value={inputData.description} rows={3} onChange={(e) => handleDesc(e)} />\r\n                            </Form.Group>\r\n                            {/* <Button type=\"submit\">Submit form</Button> */}\r\n                        </Form>\r\n\r\n                    </>\r\n                </Modal>\r\n            )}\r\n        </>\r\n    )\r\n}","import React from \"react\"\r\nimport { useState } from \"react\"\r\nimport { Form, Col, Row, Button } from \"react-bootstrap\"\r\nimport { addTask } from \"../services/fireApi\"\r\nimport { Space, Select } from \"antd\"\r\n\r\nexport default function InputForm({ currentUser, updater }) {\r\n\r\n  let [inputData, setInputData] = useState({\r\n    taskName: \"\",\r\n    description: \"\",\r\n    priority: \"low\",\r\n    status: \"pending\"\r\n  })\r\n\r\n  function handleTask(e) {\r\n    e.persist()\r\n    setInputData((prev) => {\r\n      let temp = {...prev}\r\n      temp.taskName =e.target.value;\r\n      return temp\r\n    })\r\n  }\r\n\r\n  function handleDesc(e) {\r\n    e.persist()\r\n    setInputData((prev) => {\r\n      let temp ={...prev}\r\n      temp.description = e.target.value\r\n      return temp\r\n    })\r\n  }\r\n\r\n  function handlePriority(e) {\r\n\r\n    setInputData((prev) => {\r\n      let temp ={ ...prev}\r\n      temp.priority = e\r\n      return temp\r\n    })\r\n  }\r\n\r\n  function handleStatus(e) {\r\n\r\n    setInputData((prev) => {\r\n      let temp ={...prev}\r\n      temp.status = e\r\n      return temp\r\n    })\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(inputData)\r\n    try {\r\n      await addTask(currentUser.email, inputData)\r\n      \r\n      setInputData((prev) => {\r\n        let temp = prev;\r\n        temp.status = \"pending\"\r\n        temp.priority = \"low\"\r\n        temp.taskName=\"\"\r\n        temp.description=\"\"\r\n        return temp\r\n      })\r\n      updater()\r\n    }\r\n    catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col xs=\"12\" lg=\"6\">\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Task</Form.Label>\r\n              <Form.Control type=\"text\" value={inputData.taskName} placeholder=\"Enter Task \" onChange={(e) => handleTask(e)} />\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col xs=\"12\" lg=\"3\">\r\n            <Form.Label>Priority</Form.Label>\r\n            <Space wrap >\r\n              <Select\r\n                defaultValue=\"low\"\r\n                placeholder=\"Select priority\"\r\n                style={{ width: 120 }}\r\n                value={inputData.priority}\r\n                onChange={handlePriority}\r\n                options={[\r\n                  { value: 'low', label: 'low' },\r\n                  { value: 'medium', label: 'medium' },\r\n                  { value: 'high', label: 'high' },\r\n                ]}\r\n              />\r\n            </Space>\r\n          </Col>\r\n\r\n          <Col xs=\"12\" lg=\"3\">\r\n            <Form.Label>Status</Form.Label>\r\n            <Space wrap >\r\n              <Select\r\n                defaultValue=\"pending\"\r\n                placeholder=\"Select Status\"\r\n                value={inputData.status}\r\n                style={{ width: 120 }}\r\n                onChange={handleStatus}\r\n                options={[\r\n                  { value: 'pending', label: 'pending' },\r\n                  { value: 'completed', label: 'completed' },\r\n\r\n                ]}\r\n              />\r\n            </Space>\r\n          </Col>\r\n\r\n        </Row>\r\n        <Form.Group className=\"mb-3\" >\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control as=\"textarea\" value={inputData.description} rows={3} onChange={(e) => handleDesc(e)} />\r\n        </Form.Group>\r\n        <Button type=\"submit\">Submit form</Button>\r\n      </Form>\r\n\r\n    </>\r\n  )\r\n}","import React from \"react\"\r\nimport { Select, Space } from \"antd\"\r\nimport { Col } from \"react-bootstrap\"\r\n\r\nexport function SortingList({setSorting,sorting}){\r\n\r\n    function handleSorting(e,ch){\r\n        if(ch=\"priority\"){\r\n            setSorting((prev)=>{\r\n                let temp=prev\r\n                temp.priority=e\r\n                return temp\r\n            })\r\n        }\r\n\r\n        else{\r\n            setSorting((prev)=>{\r\n                let temp=prev\r\n                temp.status=e\r\n                return temp\r\n            })\r\n        }\r\n        console.log(e,ch)\r\n\r\n    }\r\n\r\n    return(\r\n\r\n        <>\r\n                <Col lg=\"3\">\r\n                <Space wrap >\r\n                  <span>Select Priority</span>\r\n                <Select\r\n                  defaultValue=\"defult\"\r\n                  placeholder=\"Select Priority\"\r\n                  value={sorting.priority}\r\n                  style={{ width: 120 }}\r\n                 onChange={(e)=>handleSorting(e,\"priority\")}\r\n                  options={[\r\n                    { value: 'default', label: 'default' },\r\n                    { value: 'low', label: 'low' },\r\n                    { value: 'medium', label: 'high' },\r\n                    { value: 'high', label: 'high' },\r\n                  \r\n                  ]}\r\n                />\r\n                </Space>\r\n                </Col>\r\n\r\n                <Col lg=\"3\">\r\n                <Space wrap >\r\n                <span>Select Status</span>\r\n                <Select\r\n                  defaultValue=\"default\"\r\n                  placeholder=\"Select Status\"\r\n                  value={sorting.status}\r\n                  style={{ width: 120 }}\r\n                  onChange={(e)=>handleSorting(e,\"status\")}\r\n                  options={[\r\n                    { value: 'default', label: 'default' },\r\n                    { value: 'pending', label: 'pending' },\r\n                    { value: 'completed', label: 'completed' },\r\n                  ]}\r\n                />\r\n                </Space>\r\n                </Col>\r\n        </>\r\n    )\r\n}","import React from \"react\"\r\nimport { NavBar } from \"./NavBar\"\r\nimport { getData } from \"../services/fireApi\"\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport TaskCard from \"./TaskCard\"\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\nimport InputForm from \"./InputForm.js\"\r\nimport { useColorScheme } from \"./DarkMode/colorScheme\"\r\nimport { SortingList } from \"./sortingList\"\r\n\r\nexport default function TaskList() {\r\n\r\n    const [task, setTask] = useState([]);\r\n    let [count, setCount] = useState(1);\r\n    const { currentUser } = useAuth()\r\n    const [sorting, setSorting] = useState({\r\n        priority: \"default\",\r\n        status: \"default\"\r\n    })\r\n    let { isDark } = useColorScheme();\r\n    let color = \"\"\r\n    let bgColor=\"\"\r\n    if (isDark) { color = \"white\"; bgColor=\"grey\" }\r\n    else {color = \"black\"; bgColor=\"white\"}\r\n\r\n    useEffect(() => {\r\n        console.log(\"innn\")\r\n        async function getAllData() {\r\n            try {\r\n                let data = await getData(currentUser.email)\r\n                const dd = data.docs.map((doc) => ({\r\n                    ...doc.data(),\r\n                    id: doc.id,\r\n                }))\r\n                console.log(dd)\r\n                setTask(dd)\r\n            }\r\n            catch {\r\n                console.log(\"some error in data\")\r\n            }\r\n        }\r\n        getAllData()\r\n    }, [count])\r\n\r\n    // let deleteFromLocalList = (id) => {\r\n    //     console.log(\"deleet\", id)\r\n    //     setTask((prev) => {\r\n    //         return prev.filter((d) => {\r\n    //             console.log(id, \"===\", d.id)\r\n    //             return id !== d.id\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n    let updater = () => {\r\n        setCount((prev) => prev + 1)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <Container >\r\n                <Row  >\r\n                    <Col xs=\"12\" lg=\"8\"\r\n                        style={{ margin: \"auto\", boxShadow: \"rgba(0, 0, 0, 0.1) 0px 4px 12px\", \r\n                        marginBottom: \"20px\", marginTop: \"10px\", padding: \"20px\", backgroundColor: bgColor   }}\r\n                    >\r\n                        <InputForm currentUser={currentUser} updater={updater} />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row style={{ color: color }}>\r\n                    <SortingList setSorting={setSorting} sorting={sorting} />\r\n                </Row>\r\n                <Row mx={2}>\r\n                    {sorting.priority == \"default\" && (\r\n                        task.map((d) => {\r\n                            return (\r\n                                <Col key={d.id} xs=\"12\" lg=\"4\">\r\n                                    <TaskCard data={d} currentUser={currentUser} updater={updater} />\r\n                                </Col>)\r\n                        })\r\n                    )}\r\n\r\n\r\n                    {\r\n                        sorting.priority !== \"default\" && (\r\n\r\n                            task.filter((f) => f.priority === sorting.priority)\r\n                                .map((d) => {\r\n                      \r\n                                    return (\r\n                                        <Col key={d.id} xs=\"12\" lg=\"4\">\r\n                                            <TaskCard data={d} currentUser={currentUser} updater={updater} />\r\n                                        </Col>\r\n                                    )\r\n\r\n                                })\r\n                              \r\n                        )\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport Toggle from \"react-toggle\";\r\nimport { useColorScheme } from \"./colorScheme\";\r\nimport \"./darkmode.css\"\r\n\r\nexport const DarkModeToggle = () => {\r\n  const { isDark, setIsDark } = useColorScheme();\r\n  return (\r\n    <Toggle\r\n      checked={isDark}\r\n      onChange={({ target }) => setIsDark(target.checked)}\r\n      icons={{ checked: \"🌙\", unchecked: \"🔆\" }}\r\n      aria-label=\"Dark mode toggle\"\r\n    />\r\n  );\r\n};","import React from \"react\"\r\nimport Signup from \"./Signup\"\r\nimport { AuthProvider } from \"../contexts/AuthContext\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport Dashboard from \"./Dashboard\"\r\nimport Login from \"./Login\"\r\nimport PrivateRoute from \"./PrivateRoute\"\r\nimport ForgotPassword from \"./ForgotPassword\"\r\nimport UpdateProfile from \"./UpdateProfile\"\r\nimport { NavBar } from \"./NavBar\"\r\nimport { Test } from \"./test\"\r\nimport TaskList from \"./TaskList\"\r\nimport { DarkModeToggle } from \"./DarkMode/togler\"\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div className=\"dark-container\">\r\n        <DarkModeToggle />\r\n      </div>\r\n      <Router>\r\n        <AuthProvider>\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/\" component={TaskList} />\r\n            <PrivateRoute exact path=\"/task-master\" component={TaskList} />\r\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n            <PrivateRoute path=\"/test\" component={Test} />\r\n            <Route path=\"/signup\" component={Signup} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n          </Switch>\r\n        </AuthProvider>\r\n      </Router>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./index.css\"\nimport { HashRouter } from \"react-router-dom/cjs/react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n    <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}